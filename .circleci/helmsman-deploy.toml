# # version: v1.6.2
# # metadata -- add as many key/value pairs as you want
# [metadata]
#   description = "Code-Conf 2018 demo"


# # paths to the certificate for connecting to the cluster
# # You can skip this if you use Helmsman on a machine with kubectl already connected to your k8s cluster.
# # you have to use exact key names here : 'caCrt' for certificate and 'caKey' for the key and caClient for the client certificate
# # [certificates]
# #  caClient = "gs://helmsman-demo-k8s-key-store/keys/cluster_client_certificate.crt" 
# #  caCrt = "gs://helmsman-demo-k8s-key-store/keys/cluster_ca.crt" 
# #  caKey = "gs://helmsman-demo-k8s-key-store/keys/cluster_client_key.key" 


# [settings]
#  kubeContext = "gke_helmsman-demo_europe-west1-c_your-first-cluster-1" # will try connect to this context first, if it does not exist, it will be created using the details below
# #  username = "admin"
# #  password = "$K8S_PASSWORD" # the name of an environment variable containing the k8s password
# #  clusterURI = "$K8S_URI" # the name of an environment variable containing the cluster API
# #  serviceAccount = "tiller" # k8s serviceaccount. If it does not exist, it will be created.
# #  storageBackend = "secret" # default is configMap


# define your environments and their k8s namespaces
[namespaces]
  [namespaces.demo]


# define any private/public helm charts repos you would like to get charts from
[helmRepos]
  praqma = "https://praqma-helm-repo.s3.amazonaws.com/"


# define the desired state of your applications helm charts
# each contains the following:
[apps]

  [apps.ngingo]
    namespace = "demo" 
    enabled = true
    chart = "praqma/ngingo"
    version = "0.1.0"
    # valuesFile = "ngingo-values.yaml"
  
# See https://github.com/Praqma/helmsman/blob/master/docs/desired_state_specification.md#apps for more apps options
